{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://selinafinance.co.uk/schemas/letta-asl-workflow-2.2.0.json",
  "title": "Letta-ASL Workflow (v2.2.0, DAG + Ephemeral Workers + Skills)",
  "description": "Workflow schema aligned with AWS Step Functions (ASL) and Letta Agent File (.af) v2. Each Task spawns ephemeral workers from .af v2 agent templates and may load skills from skill manifests at runtime.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "workflow_schema_version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "default": "2.2.0",
      "description": "Version of this workflow schema (semver)."
    },
    "workflow_id": {
      "type": "string",
      "format": "uuid",
      "description": "Unique identifier for this workflow instance."
    },
    "workflow_name": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of this workflow definition (author-controlled)."
    },
    "created_at": {
      "type": "string",
      "format": "date-time"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time"
    },
    "author": {
      "type": "string"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "workflow_input_schema": {
      "type": "object",
      "description": "JSON Schema describing initial inputs for the workflow."
    },
    "af_imports": {
      "description": "External Letta .af v2 bundles to load (file paths or file:// URIs).",
      "type": "array",
      "items": {
        "$ref": "#/$defs/ImportItem"
      },
      "default": []
    },
    "skill_imports": {
      "description": "External skill manifests or bundles (file paths or file:// URIs).",
      "type": "array",
      "items": {
        "$ref": "#/$defs/SkillImport"
      },
      "default": []
    },
    "agents": {
      "description": "Optional named agents available to the workflow (referenced by agent_ref). Most executions will prefer per-state ephemeral workers via AgentBinding.agent_template_ref.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/AgentDefinition"
      },
      "default": []
    },
    "asl": {
      "description": "AWS Step Functions-style state machine for execution (DAG-friendly).",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Comment": {
          "type": "string"
        },
        "StartAt": {
          "type": "string"
        },
        "Version": {
          "type": "string",
          "default": "1.0"
        },
        "TimeoutSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "States": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/AslState"
          }
        }
      },
      "required": [
        "StartAt",
        "States"
      ]
    }
  },
  "required": [
    "workflow_id",
    "workflow_name",
    "version",
    "asl"
  ],
  "$defs": {
    "ImportItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "uri": {
          "type": "string",
          "description": "Path or file:// URI to a .af v2 JSON bundle."
        },
        "version": {
          "type": "string",
          "enum": [
            "2"
          ],
          "default": "2"
        },
        "integrity": {
          "type": [
            "string",
            "null"
          ],
          "description": "Optional integrity hash (e.g., sha256:...)"
        }
      },
      "required": [
        "uri"
      ]
    },
    "SkillImport": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "uri": {
          "type": "string",
          "description": "Path or file:// URI to a skill manifest (or a bundle with {\"skills\":[...]})."
        },
        "integrity": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "uri"
      ]
    },
    "AgentRef": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AgentDefinition": {
      "title": "Agent Definition (reference only)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "agent_name": {
          "type": "string"
        },
        "agent_ref": {
          "$ref": "#/$defs/AgentRef"
        }
      },
      "required": [
        "agent_name",
        "agent_ref"
      ]
    },
    "Lifecycle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "ephemeral",
            "pooled",
            "existing"
          ],
          "default": "ephemeral"
        },
        "destroy_on_end": {
          "type": "boolean",
          "default": true
        },
        "reuse_key": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reusable key for pooled/existing modes."
        }
      },
      "default": {
        "mode": "ephemeral",
        "destroy_on_end": true
      }
    },
    "AslState": {
      "description": "Amazon States Language subset with Letta bindings for DAG + ephemeral workers.",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "Type": {
          "type": "string",
          "enum": [
            "Task",
            "Choice",
            "Pass",
            "Wait",
            "Parallel",
            "Map",
            "Fail",
            "Succeed"
          ]
        },
        "Comment": {
          "type": "string"
        },
        "Parameters": {
          "type": "object"
        },
        "ResultPath": {
          "type": "string"
        },
        "Next": {
          "type": "string"
        },
        "End": {
          "type": "boolean"
        },
        "Choices": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "Default": {
          "type": "string"
        },
        "Branches": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "StartAt": {
                "type": "string"
              },
              "States": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/$defs/AslState"
                }
              }
            },
            "required": [
              "StartAt",
              "States"
            ]
          }
        },
        "ItemsPath": {
          "type": "string"
        },
        "Iterator": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "StartAt": {
              "type": "string"
            },
            "States": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/$defs/AslState"
              }
            }
          },
          "required": [
            "StartAt",
            "States"
          ]
        },
        "ResultSelector": {
          "type": "object"
        },
        "Catch": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "Retry": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "AgentBinding": {
          "description": "Bind a Task state to a Letta agent template (ephemeral worker) and load skills at runtime.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "agent_template_ref": {
              "$ref": "#/$defs/AgentRef",
              "description": "Reference to an .af v2 agent template used to spawn an ephemeral worker for this state."
            },
            "agent_ref": {
              "$ref": "#/$defs/AgentRef",
              "description": "Optional: existing agent to use instead of spawning a worker."
            },
            "skills": {
              "type": "array",
              "description": "List of skill IDs (e.g., skill://...@semver) to load before executing this state.",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "tool_name": {
              "type": "string",
              "description": "Optional direct tool entrypoint (advanced; usually provided by loaded skills)."
            },
            "lifecycle": {
              "$ref": "#/$defs/Lifecycle"
            }
          }
        }
      },
      "required": [
        "Type"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "Type": {
                "const": "Task"
              }
            }
          },
          "then": {
            "properties": {
              "AgentBinding": {
                "type": "object"
              }
            },
            "required": [
              "AgentBinding"
            ]
          }
        }
      ]
    }
  }
}